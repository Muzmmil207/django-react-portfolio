# Generated by Django 4.1.7 on 2023-06-26 13:01

import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import utils.models.models_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Email must be entered in the format: `abc@abc.com|net|org|info`.",
                                regex="^[A-z0-9\\.]+@[A-z0-9]+\\.(com|net|org|info)$",
                            )
                        ],
                        verbose_name="Email Address",
                    ),
                ),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "contacts",
            },
        ),
        migrations.CreateModel(
            name="DeviceTrack",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_agent",
                    models.CharField(
                        blank=True,
                        help_text="e.g. Chrome 98, Windows, TECNO KE5, Android",
                        max_length=255,
                        null=True,
                        verbose_name="User Agent",
                    ),
                ),
                (
                    "user_device",
                    models.CharField(
                        choices=[
                            ("windows", "Windows"),
                            ("mac", "Mac"),
                            ("linux", "Linux"),
                            ("android", "Android"),
                            ("ios", "Ios"),
                            ("other", "Other"),
                        ],
                        max_length=12,
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address of the device",
                        null=True,
                        verbose_name="IP Address",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Location of the device",
                        max_length=255,
                        null=True,
                        verbose_name="Location",
                    ),
                ),
                (
                    "visited_data",
                    models.DateTimeField(
                        auto_now=True, help_text="The time when the user visit"
                    ),
                ),
            ],
            options={
                "verbose_name": "Device Activity",
                "verbose_name_plural": "Device Activity",
                "db_table": "device_track",
                "ordering": ("-visited_data",),
            },
        ),
        migrations.CreateModel(
            name="MyProject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        default="default.jpg",
                        null=True,
                        upload_to=utils.models.models_fields.img_dir_path,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Required",
                        max_length=255,
                        unique=True,
                        verbose_name="Title",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "description",
                    ckeditor.fields.RichTextField(
                        blank=True,
                        help_text="Not Required",
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "src_url",
                    models.URLField(
                        blank=True,
                        help_text="Not Required",
                        null=True,
                        verbose_name="Source Code Url",
                    ),
                ),
                (
                    "project_url",
                    models.URLField(
                        blank=True,
                        help_text="Not Required",
                        null=True,
                        verbose_name="project_url",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
            ],
            options={
                "db_table": "my_projects",
            },
        ),
        migrations.CreateModel(
            name="PostSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "source_name",
                    models.CharField(max_length=40, verbose_name="post source"),
                ),
            ],
            options={
                "db_table": "posts_source",
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        default="default.jpg",
                        null=True,
                        upload_to=utils.models.models_fields.img_dir_path,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Required",
                        max_length=255,
                        unique=True,
                        verbose_name="Title",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "post_url",
                    models.URLField(help_text="Required", verbose_name="project_url"),
                ),
                (
                    "source",
                    models.ManyToManyField(related_name="posts", to="base.postsource"),
                ),
            ],
            options={
                "ordering": ("-created_at", "-updated_at"),
            },
        ),
    ]
